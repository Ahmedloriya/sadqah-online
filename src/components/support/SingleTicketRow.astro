---
const { id, ticketNumber, subject, status, priority, created, updated } =
  Astro.props;
---

<tr class="bg-white border-b hover:bg-gray-50">
  <td class="w-4 p-4">
    <div class="flex items-center">
      <input
        type="checkbox"
        class="row-checkbox w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 hover:cursor-pointer"
      />
    </div>
  </td>
  <td class="px-6 py-4">{id}</td>
  <td class="px-6 py-4">{ticketNumber}</td>
  <td class="px-6 py-4">{subject}</td>
  <td class="px-6 py-4">
    <span
      class={`px-2 py-1 text-xs font-semibold rounded-full ${
        status === "Open"
          ? "text-green-800 bg-green-100"
          : "text-blue-800 bg-blue-100"
      }`}
    >
      {status}
    </span>
  </td>
  <td class="px-6 py-4">
    <span
      class={`px-2 py-1 text-xs font-semibold rounded-full ${
        priority === "High"
          ? "text-black bg-[#FFDFDF] "
          : priority === "Low"
            ? "text-black bg-[#D1FFD6]"
            : "bg-[#FFF2DC] text-black"
      }`}
    >
      {priority}
    </span>
  </td>
  <td class="px-6 py-4 text-center">{created}</td>
  <td class="px-6 py-4 text-center">{updated}</td>
</tr>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const statusButtons = document.querySelectorAll("[data-status]");
    const priorityButtons = document.querySelectorAll("[data-priority]");
    const tableRows = document.querySelectorAll("tbody tr");

    let currentStatusFilter = "all";
    let currentPriorityFilter = "all";

    function filterTable() {
      tableRows.forEach((row) => {
        const status = row.getAttribute("data-status");
        const priority = row.getAttribute("data-priority");

        const statusMatch =
          currentStatusFilter === "all" || currentStatusFilter === status;
        const priorityMatch =
          currentPriorityFilter === "all" || currentPriorityFilter === priority;

        if (statusMatch && priorityMatch) {
          row.style.display = "";
        } else {
          row.style.display = "none";
        }
      });
    }

    // Filter by status
    statusButtons.forEach((button) => {
      button.addEventListener("click", function () {
        currentStatusFilter = this.getAttribute("data-status");
        filterTable();
      });
    });

    // Filter by priority
    priorityButtons.forEach((button) => {
      button.addEventListener("click", function () {
        currentPriorityFilter = this.getAttribute("data-priority");
        filterTable();
      });
    });
  });
</script>
